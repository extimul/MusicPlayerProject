<UserControl x:Class="MusicPlayer.App.WPF.Views.Controls.TracksListViewControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:type="clr-namespace:MusicPlayer.Core.Types;assembly=MusicPlayer.Core"
             mc:Ignorable="d">

    <ListView x:Name="TracksListView"
                BorderThickness="0"
                BorderBrush="{x:Null}"
                Background="Transparent"
                ItemsSource="{Binding TracksCollection, UpdateSourceTrigger=PropertyChanged}"
                SelectedItem="{Binding SelectedTrack, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                SelectionMode="Single">
        <ListView.ContextMenu>
            <ContextMenu Style="{StaticResource TracksListViewContextMenu}"
                         ItemContainerStyle="{StaticResource MenuItemStyle}"
                         Foreground="{StaticResource AppForegroundBrush}">
                <MenuItem Header="Play" Icon="{StaticResource PlayIcon}"/>
                <MenuItem Header="Pause" Icon="{StaticResource PauseIcon}"/>
                <MenuItem Header="Delete" Icon="{StaticResource DeleteIcon}"/>
                <MenuItem Header="Get information" Icon="{StaticResource InfoIcon}"/>
            </ContextMenu>
        </ListView.ContextMenu>
        <i:Interaction.Triggers>
            <i:EventTrigger EventName="MouseDoubleClick">
                <i:InvokeCommandAction Command="{Binding PlayPauseCommand}"
                                           CommandParameter="{x:Static type:AudioPlayerControlTypes.DoubleClickSwitch}"/>
            </i:EventTrigger>
        </i:Interaction.Triggers>
        <ListView.ItemContainerStyle>
            <Style TargetType="{x:Type ListViewItem}">
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="BorderBrush" Value="{x:Null}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ListViewItem}">
                            <Border CornerRadius="10" 
                                        Background="{TemplateBinding Background}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}">
                                <ContentPresenter Content="{TemplateBinding Content}" 
                                                      ContentTemplate="{TemplateBinding ContentTemplate}"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsSelected" Value="True"/>
                                        <Condition Property="Selector.IsSelectionActive" Value="True"/>
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Background" Value="{StaticResource AppElementBackgroundBrush}"/>
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsSelected" Value="True"/>
                                        <Condition Property="Selector.IsSelectionActive" Value="False"/>
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Background" Value="{StaticResource AppElementBackgroundBrush}"/>
                                </MultiTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ListView.ItemContainerStyle>
        <ListView.ItemTemplate>
            <DataTemplate>
                <Grid Height="60" Margin="5">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition MinWidth="30" Width="1*"/>
                        <ColumnDefinition MinWidth="40" Width="1*"/>
                        <ColumnDefinition MinWidth="300" Width="5*"/>
                        <ColumnDefinition Width="5*"/>
                        <ColumnDefinition MinWidth="250" Width="2*"/>
                        <ColumnDefinition MinWidth="200" Width="2*"/>
                    </Grid.ColumnDefinitions>

                    <!--Track number-->
                    <Label x:Name="TackIdLabel"
                                Content="{Binding Id, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                                Grid.Column="0"
                                VerticalAlignment="Center"
                                HorizontalContentAlignment="Center">
                        <Label.Style>
                            <Style TargetType="{x:Type Label}">
                                <Setter Property="FontSize" Value="{StaticResource FontSizeMedium}"/>
                                <Setter Property="Foreground" Value="{StaticResource AppForegroundBrush}"/>
                                <Setter Property="Visibility" Value="Visible"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListViewItem}}, Path=IsSelected}" Value="True">
                                        <Setter Property="Visibility" Value="Hidden"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Label.Style>
                    </Label>

                    <!-- PlayPause button-->
                    <Button x:Name="PlayPauseButton"
                                Foreground="{StaticResource AppForegroundBrush}"
                                Grid.Column="0"
                                Command="{Binding ElementName=TracksListView, Path=DataContext.PlayPauseCommand}"
                                CommandParameter="{x:Static type:AudioPlayerControlTypes.StartPause}">
                        <Button.Style>
                            <Style TargetType="Button">
                                <Setter Property="Height" Value="20"/>
                                <Setter Property="Width" Value="20"/>
                                <Setter Property="BorderThickness" Value="0"/>
                                <Setter Property="Background" Value="{x:Null}"/>
                                <Setter Property="Margin" Value="10"/>
                                <Setter Property="Visibility" Value="Visible"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type Button}">
                                            <Grid x:Name="grid">
                                                <Path x:Name="ellipse" Stretch="Uniform"
                                                             StrokeThickness="0"
                                                             Stroke="Transparent"
                                                             Fill="Transparent" >
                                                    <Path.Data>
                                                        <EllipseGeometry RadiusX="50" RadiusY="50" />
                                                    </Path.Data>
                                                </Path>
                                                <Path x:Name="shape" 
                                                        Stretch="Uniform" 
                                                        Height="{Binding ElementName=grid, Path=ActualHeight, Converter={StaticResource ScaleConverter}}" 
                                                        Width="{Binding ElementName=grid, Path=ActualWidth, Converter={StaticResource ScaleConverter}}"
                                                        Fill="{TemplateBinding Foreground}" 
                                                        Data="{Binding ElementName=TracksListView, Path=DataContext.PlayPauseIcon, Converter={StaticResource ContentConverter}}"/>
                                            </Grid>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter TargetName="shape" Property="Fill" Value="{StaticResource AppForegroundGreyBrush}"/>
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListViewItem}}, Path=IsSelected}" Value="True">
                                        <Setter Property="Visibility" Value="Visible"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListViewItem}}, Path=IsSelected}" Value="False">
                                        <Setter Property="Visibility" Value="Hidden"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>

                    <!--Album/Track image-->
                    <Image Grid.Column="1"
                               Width="50"
                               Height="50"
                               Source="{Binding TrackImage, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                               Stretch="Fill"
                               Margin="0"
                           RenderOptions.BitmapScalingMode="HighQuality"/>
                    <!--Track name, author-->
                    <Grid Grid.Column="2" Margin="10,0,0,0">
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <Label Content="{Binding Title}"
                                   Grid.Row="0"
                                   FontSize="{StaticResource FontSizeLarge}"
                                   Foreground="{StaticResource AppForegroundBrush}">
                        </Label>
                        <Label Content="{Binding Author}"
                               Foreground="{StaticResource AppForegroundLightGreyBrush}"
                               FontSize="{StaticResource FontSizeRegular}"
                               Grid.Row="1"/>
                    </Grid>
                    <!--Album-->
                    <Grid Grid.Column="4">
                        <Label Content="{Binding TrackAlbum, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                                   VerticalAlignment="Center"
                                   HorizontalContentAlignment="Center"
                                   Foreground="{StaticResource AppForegroundLightGreyBrush}"
                               FontSize="{StaticResource FontSizeRegular}"/>
                    </Grid>

                    <!--Additional inforamtion-->
                    <Grid Grid.Column="5">
                        <StackPanel Orientation="Horizontal"
                                        VerticalAlignment="Center"
                                        HorizontalAlignment="Right">
                            <ToggleButton Style="{StaticResource ToggleButtonStyle}"
                                          Content="{StaticResource FavouriteIcon}"
                                          IsChecked="{Binding IsLiked, Mode=TwoWay}"
                                          Foreground="{StaticResource AppForegroundBrush}"
                                          Margin="0,0,15,0"/>
                            <Label Content="{Binding Duration, Mode=OneWay}"
                                    Margin="0,0,20,0"
                                    Foreground="{StaticResource AppForegroundLightGreyBrush}"
                                   FontSize="{StaticResource FontSizeRegular}"/>
                        </StackPanel>
                    </Grid>
                </Grid>
            </DataTemplate>
        </ListView.ItemTemplate>
    </ListView>
</UserControl>
